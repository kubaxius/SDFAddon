[gd_resource type="VisualShader" load_steps=14 format=3 uid="uid://byyuletbosc2w"]

[ext_resource type="Script" path="res://addons/shaderV/tools/TimeScaled.gd" id="1_xgwpk"]
[ext_resource type="Script" path="res://addons/shaderV/tools/sinTime.gd" id="2_akrom"]
[ext_resource type="Script" path="res://addons/sdf_visual_shader_nodes/nodes/torus.gd" id="4_2on0u"]

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_mbde6"]
default_input_values = [0, 1.0]
initialized = true
script = ExtResource("1_xgwpk")

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_jvjlm"]
default_input_values = [0, 1.0, 1, 1.0]
initialized = true
script = ExtResource("2_akrom")

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_b3dsp"]
default_input_values = [0, Vector3(0, 0, 0), 1, 1.0, 2, 0.5, 3, Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0)]
initialized = true
script = ExtResource("4_2on0u")

[sub_resource type="VisualShaderNodeVaryingGetter" id="VisualShaderNodeVaryingGetter_v76ca"]
varying_name = "vertex_position"
varying_type = 4

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_dxtdd"]
default_input_values = [0, 0.0, 1, 0.0, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(1, 1, 1)]

[sub_resource type="VisualShaderNodeRotationByAxis" id="VisualShaderNodeRotationByAxis_km4b1"]
default_input_values = [1, 0.5, 2, Vector3(-1, 0, 1)]

[sub_resource type="VisualShaderNodeTransformDecompose" id="VisualShaderNodeTransformDecompose_stwve"]

[sub_resource type="VisualShaderNodeTransformCompose" id="VisualShaderNodeTransformCompose_ecsvk"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_lmmwk"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVaryingSetter" id="VisualShaderNodeVaryingSetter_74tm7"]
varying_name = "vertex_position"
varying_type = 4

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;


// Varyings
varying vec3 vertex_position;



// SDTorus
#include \"res://addons/sdf_visual_shader_nodes/shader_includes/torus.gdshaderinc\"

void vertex() {
// Input:2
	vec3 n_out2p0 = VERTEX;


// VaryingSetter:3
	vertex_position = n_out2p0;


}

void fragment() {
// VaryingGetter:2
	vec3 n_out2p0 = vertex_position;


	float n_out10p0;
// ScaledTIME:10
	float n_in10p0 = 1.00000;
	{
		n_out10p0 = n_in10p0 * TIME;
	}


	vec3 n_out5p0;
	mat4 n_out5p1;
// RotationByAxis:5
	vec3 n_in5p2 = vec3(-1.00000, 0.00000, 1.00000);
	{
		float __angle = n_out10p0;
		vec3 __axis = normalize(n_in5p2);
		mat3 __rot_matrix = mat3(
			vec3( cos(__angle)+__axis.x*__axis.x*(1.0 - cos(__angle)), __axis.x*__axis.y*(1.0-cos(__angle))-__axis.z*sin(__angle), __axis.x*__axis.z*(1.0-cos(__angle))+__axis.y*sin(__angle) ),
			vec3( __axis.y*__axis.x*(1.0-cos(__angle))+__axis.z*sin(__angle), cos(__angle)+__axis.y*__axis.y*(1.0-cos(__angle)), __axis.y*__axis.z*(1.0-cos(__angle))-__axis.x*sin(__angle) ),
			vec3( __axis.z*__axis.x*(1.0-cos(__angle))-__axis.y*sin(__angle), __axis.z*__axis.y*(1.0-cos(__angle))+__axis.x*sin(__angle), cos(__angle)+__axis.z*__axis.z*(1.0-cos(__angle)) )
		);
		n_out5p0 = n_out2p0 * __rot_matrix;
		n_out5p1 = mat4(__rot_matrix);
	}


// TransformDecompose:7
	vec3 n_out7p0 = n_out5p1[0].xyz;
	vec3 n_out7p1 = n_out5p1[1].xyz;
	vec3 n_out7p2 = n_out5p1[2].xyz;
	vec3 n_out7p3 = n_out5p1[3].xyz;


	float n_out11p0;
// SinTIME:11
	float n_in11p0 = 1.00000;
	float n_in11p1 = 1.00000;
	{
		n_out11p0 = n_in11p1 * sin(n_in11p0 * TIME);
	}


// TransformCompose:8
	mat4 n_out8p0 = mat4(vec4(n_out7p0, 0.0), vec4(n_out7p1, 0.0), vec4(n_out7p2, 0.0), vec4(vec3(n_out11p0), 1.0));


	float n_out14p0;
// SDTorus:14
	float n_in14p1 = 1.00000;
	float n_in14p2 = 0.50000;
	{
		n_out14p0 = sdTorusNode(n_out2p0, n_in14p1, n_in14p2, n_out8p0);
	}


	vec3 n_out4p0;
// If:4
	float n_in4p1 = 0.00000;
	float n_in4p2 = 0.00001;
	vec3 n_in4p3 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in4p4 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in4p5 = vec3(1.00000, 1.00000, 1.00000);
	if(abs(n_out14p0 - n_in4p1) < n_in4p2)
	{
		n_out4p0 = n_in4p3;
	}
	else if(n_out14p0 < n_in4p1)
	{
		n_out4p0 = n_in4p5;
	}
	else
	{
		n_out4p0 = n_in4p4;
	}


// Output:0
	ALBEDO = n_out4p0;


}
"
graph_offset = Vector2(239.956, -332.872)
varyings/vertex_position = "0,4"
nodes/vertex/2/node = SubResource("VisualShaderNodeInput_lmmwk")
nodes/vertex/2/position = Vector2(-180, 180)
nodes/vertex/3/node = SubResource("VisualShaderNodeVaryingSetter_74tm7")
nodes/vertex/3/position = Vector2(200, 180)
nodes/vertex/connections = PackedInt32Array(2, 0, 3, 0)
nodes/fragment/0/position = Vector2(1840, -80)
nodes/fragment/2/node = SubResource("VisualShaderNodeVaryingGetter_v76ca")
nodes/fragment/2/position = Vector2(340, -80)
nodes/fragment/4/node = SubResource("VisualShaderNodeIf_dxtdd")
nodes/fragment/4/position = Vector2(1640, -80)
nodes/fragment/5/node = SubResource("VisualShaderNodeRotationByAxis_km4b1")
nodes/fragment/5/position = Vector2(600, 60)
nodes/fragment/7/node = SubResource("VisualShaderNodeTransformDecompose_stwve")
nodes/fragment/7/position = Vector2(800, 80)
nodes/fragment/8/node = SubResource("VisualShaderNodeTransformCompose_ecsvk")
nodes/fragment/8/position = Vector2(1040, 80)
nodes/fragment/10/node = SubResource("VisualShaderNodeCustom_mbde6")
nodes/fragment/10/position = Vector2(380, 80)
nodes/fragment/11/node = SubResource("VisualShaderNodeCustom_jvjlm")
nodes/fragment/11/position = Vector2(820, 240)
nodes/fragment/14/node = SubResource("VisualShaderNodeCustom_b3dsp")
nodes/fragment/14/position = Vector2(1360, -80)
nodes/fragment/connections = PackedInt32Array(4, 0, 0, 0, 5, 1, 7, 0, 7, 0, 8, 0, 7, 1, 8, 1, 7, 2, 8, 2, 10, 0, 5, 1, 11, 0, 8, 3, 2, 0, 14, 0, 8, 0, 14, 3, 14, 0, 4, 0, 2, 0, 5, 0)
